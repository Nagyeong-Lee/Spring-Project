<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Spring_Project.mapper.QnAMapper">

    <insert id="insertQuestion" parameterType="hashMap">
        insert
        into
        question
        values(
        q_seq.nextval,
        #{id},
        #{pd_seq},
        #{content},
        'Y',
        sysdate,
        'N'
        )
    </insert>

    <select id="getQuestions" resultType="com.example.Spring_Project.dto.QuestionDTO">
        select
            q_seq,
            id,
            pd_seq,
            content,
            status,
        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate
        from
        question
        where status = 'Y' and pd_seq = #{pd_seq}
        order by writeDate desc
    </select>

    <select id="getAnswer" resultType="com.example.Spring_Project.dto.AnswerDTO">
        select
            writer,
            answer,
            to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate
        from answer
        where q_seq = #{q_seq} and status = 'Y'
    </select>

    <select id="getMyQnAs" resultType="com.example.Spring_Project.dto.QuestionDTO">
<!--        select-->
<!--            q_seq,-->
<!--            id,-->
<!--            pd_seq,-->
<!--            content,-->
<!--            status,-->
<!--            to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate-->
<!--        from question-->
<!--        where status = 'Y'-->
<!--        order by writeDate desc-->

        SELECT a.* FROM (
        SELECT rownum r,a.*
        from
        (select
        q_seq,
        id,
        pd_seq,
        content,
        status,
        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate
        from question where id = #{id} and status = 'Y' ORDER BY 1 desc) a)a WHERE r BETWEEN #{start} AND #{end}
    </select>

    <select id="getQuestion" resultType="com.example.Spring_Project.dto.QuestionDTO">
        select
          q_seq,
          pd_seq,
          content,
          writeDate
        from question
        where q_seq = #{q_seq}
    </select>

    <update id="updQuestion" parameterType="hashMap">
        update question
            set content = #{content},
                writeDate = sysdate
        where q_seq = #{q_seq}
    </update>

    <select id="qNaList" resultType="com.example.Spring_Project.dto.QuestionDTO">
<!--        select-->
<!--            q_seq,-->
<!--            id,-->
<!--            pd_seq,-->
<!--            content,-->
<!--            status,-->
<!--        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate-->
<!--        from question-->
        SELECT a.* FROM (
        SELECT rownum r,a.*
        from
        (select
        q_seq,
        id,
        pd_seq,
        content,
        status,
        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate
        from question where status = 'Y' ORDER BY 1 desc) a)a WHERE r BETWEEN #{start} AND #{end}

<!--        where status = 'Y'-->
    </select>

    <insert id="insertAns" parameterType="hashMap">
        insert
         into answer
        values(
            ans_seq.nextval,
            #{q_seq},
            #{id},
            #{answer},
            sysdate,
            'Y',
            'Y'
        )
    </insert>

    <update id="updAns" parameterType="HashMap">
        update
         answer
        set answer = #{content},
            writeDate = sysdate
        where q_seq = #{q_seq}
    </update>

    <select id="pdInfo" resultType="com.example.Spring_Project.dto.ProductDTO">
        select
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        from product
        where pd_seq = #{pd_seq}
    </select>

    <select id="filteredReviewCnt" resultType="Integer" parameterType="java.util.List">
        SELECT count(*)
        FROM (
        SELECT
        r.review_seq,
        r.id,
        r.pd_seq,
        r.payPd_seq,
        r.stock,
        r.price,
        r.pdOption,
        r.star,
        r.content,
        writeDate,
        p.name AS pdName,
        p.img AS PdImg
        FROM PRODUCT p JOIN (
        SELECT
        r.review_seq,
        r.id,
        r.pd_seq,
        r.payPd_seq,
        s.stock,
        s.price,
        s.pdOption,
        r.star,
        r.content,
        writeDate
        FROM sales s JOIN (
        SELECT
        r.review_seq,
        r.id,
        r.payPd_seq,
        r.pd_seq,
        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate,
        r.star,
        r.content
        FROM review r WHERE pd_seq IN (
        SELECT
        pd_seq
        FROM product
        WHERE CATEGORY IN (
        SELECT
        category_seq
        FROM category
        WHERE PARENT_CATEGORY_SEQ IN (
        SELECT
        CATEGORY_SEQ
        FROM category
        WHERE name IN
        <foreach collection="pcArr" item="pcArr" open="(" close=")" separator=",">
            #{pcArr}
        </foreach>)
        AND name IN
        <foreach collection="chCArr" item="chCArr" open="(" close=")" separator=",">
            #{chCArr}
        </foreach>
        )) AND status = 'Y') r ON s.payPd_seq = r.payPd_seq
        WHERE r.star IN
        <foreach collection="starArr" item="starArr" open="(" close=")" separator=",">
            #{starArr}
        </foreach>
        ) r on p.pd_seq = r.pd_seq)
        <choose>
            <when test='type.equals("pdName") and keyword != null'>
                where pdName like '%'||#{keyword}||'%'
            </when>
            <when test='type.equals("content") and keyword != null'>
                where content like '%'||#{keyword}||'%'
            </when>
            <when test='type.equals("writer") and keyword != null'>
                where id like '%'||#{keyword}||'%'
            </when>
        </choose>
    </select>

    <update id="deleteAns">
        update answer set status = 'N' , ansYN = 'N' where q_seq = #{q_seq}
    </update>
</mapper>