<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Spring_Project.mapper.ApiMapper">
    <insert id="insertInfectionInfo" parameterType="com.example.Spring_Project.dto.InfectionDTO">
        INSERT INTO infection
        VALUES(
        infection_seq.currval,
        #{resultCode},
        #{resultMsg},
        #{resultCnt},
        #{mmddhh},
        #{mmdd1},
        #{cnt1},
        #{rate1},
        #{mmdd2},
        #{cnt2},
        #{rate2},
        #{mmdd3},
        #{cnt3},
        #{rate3},
        #{mmdd4},
        #{cnt4},
        #{rate4},
        #{mmdd5},
        #{cnt5},
        #{rate5},
        #{mmdd6},
        #{cnt6},
        #{rate6},
        #{mmdd7},
        #{cnt7},
        #{rate7},
        #{mmdd8},
        #{cnt8},
        #{rate8},
        'Y'
        )
    </insert>

    <select id="getInfectionInfo" resultType="com.example.Spring_Project.dto.InfectionDTO">
        select
        resultCode,
        resultMsg,
        resultCnt,
        mmddhh,
        mmdd1,
        cnt1,
        rate1,
        mmdd2,
        cnt2,
        rate2,
        mmdd3,
        cnt3,
        rate3,
        mmdd4,
        cnt4,
        rate4,
        mmdd5,
        cnt5,
        rate5,
        mmdd6,
        cnt6,
        rate6,
        mmdd7,
        cnt7,
        rate7,
        mmdd8,
        cnt8,
        rate8,
        status
        from infection
        where status='Y'
    </select>

    <select id="getCurrVal" resultType="Integer">
        SELECT infection_seq.currval from dual
    </select>

    <select id="getNextVal" resultType="Integer">
        SELECT infection_seq.nextval from dual
    </select>

    <update id="updateStatus">
        UPDATE infection
        set status='N'
        where infection_seq not in #{infection_seq}
    </update>

    <insert id="insertInfectionByMonth" parameterType="String">
        INSERT INTO infectionByMonth
        values(
        infectionByMonth_seq.nextval,
        #{mmdd},
        #{cnt},
        #{month},
        #{year}
        )
    </insert>

    <select id="getYear" resultType="String">
        select to_char(sysdate,'YYYY') from dual
    </select>

    <select id="getInfectionByMonthInfo" resultType="com.example.Spring_Project.dto.InfectionByMonthDTO2">
        SELECT MONTH,sum(cnt) as sum FROM infectionByMonth WHERE YEAR='2023' GROUP BY MONTH ORDER BY 1
    </select>

    <select id="getHospitalInfo" resultType="com.example.Spring_Project.dto.HospitalDTO">
        select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from(
        select ROWNUM rn,a.*
        from
        (select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from hospital
        <if test="city neq ''">
            <trim prefix="WHERE" prefixOverrides="AND">
                AND city=#{city}
            </trim>
        </if>
        <if test="searchType eq 'hospital_name'.toString()">
            <trim prefix="WHERE" prefixOverrides="AND">
                and hospital_name like '%'||#{keyword}||'%'
            </trim>
        </if>
        <if test="searchType eq 'phone'.toString()">
            where phone like '%'||#{keyword}||'%'
        </if>
        <if test="searchType eq 'postcode'.toString()">
            where postcode like '%'||#{keyword}||'%'
        </if>
        <if test="searchType eq 'roadAddress'.toString()">
            where roadAddress like '%'||#{keyword}||'%'
        </if>
        order by 1) a
        )
        where rn between ${start} and #{end}
    </select>

    <select id="getInfo" resultType="com.example.Spring_Project.dto.HospitalDTO">
        select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from hospital
        where hospital_seq=#{hospital_seq}
    </select>

    <select id="countPost" resultType="Integer">
        SELECT COUNT(*)
        FROM hospital
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="city neq '' and city neq 'ALL'.toString()">
                AND city=#{city}
            </if>
            <if test="weekOpen != null">
                <![CDATA[AND to_date(weekOpen,'hh24:mi')>=to_date(#{weekOpen},'hh24:mi')]]>
            </if>
            <if test="weekClose != null">
                <![CDATA[AND to_date(weekClose,'hh24:mi')<=to_date(#{weekClose},'hh24:mi')]]>
            </if>
            <if test="satOpen != null">
                <![CDATA[AND to_date(satOpen,'hh24:mi')>=to_date(#{satOpen},'hh24:mi')]]>
            </if>
            <if test="satClose != null">
                <![CDATA[AND to_date(satClose,'hh24:mi')<=to_date(#{satClose},'hh24:mi')]]>
            </if>
            <if test="searchType eq 'hospital_name'.toString()">
                AND hospital_name LIKE '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'phone'.toString()">
                AND phone LIKE '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'postcode'.toString()">
                AND postcode LIKE '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'roadAddress'.toString()">
                AND roadAddress LIKE '%'||#{keyword}||'%'
            </if>
            <choose>
                <when test="holidayY eq '진료'.toString() and holidayN eq ''.toString()">
                    <![CDATA[AND to_date(holidayOpen,'hh24:mi')>=to_date(#{holidayOpen},'hh24:mi')]]>
                    <![CDATA[AND to_date(holidayClose,'hh24:mi')<=to_date(#{holidayClose},'hh24:mi')]]>
                </when>
                <!-- 미진료만 선택 -->
                <when test="holidayN eq '미진료'.toString() and holidayY eq ''.toString()">
                    AND holidayOpen = '-'
                    AND holidayClose = '-'
                </when>
            </choose>
        </trim>
    </select>



    <select id="getCity" resultType="String">
        SELECT city FROM hospital GROUP BY city order by 1
    </select>

    <select id="getWeekOpen" resultType="String">
        SELECT WEEKOPEN FROM hospital GROUP BY WEEKOPEN order by 1
    </select>

    <select id="getWeekClose" resultType="String">
        SELECT WEEKCLOSE FROM hospital GROUP BY WEEKCLOSE order by 1
    </select>

    <select id="getSatOpen" resultType="String">
        SELECT SATOPEN FROM hospital GROUP BY SATOPEN order by 1
    </select>

    <select id="getSatClose" resultType="String">
        SELECT SATCLOSE FROM hospital GROUP BY SATCLOSE order by 1
    </select>

    <select id="getHolidayYN" resultType="String">
        SELECT DISTINCT NVL2(HOLIDAYOPEN,'진료','미진료') FROM hospital GROUP BY HOLIDAYOPEN
    </select>

    <select id="getHolidayOpen" resultType="String">
        SELECT HOLIDAYOPEN FROM hospital WHERE HOLIDAYOPEN IS NOT NULL GROUP BY HOLIDAYOPEN order by 1
    </select>

    <select id="getHolidayClose" resultType="String">
        SELECT HOLIDAYCLOSE FROM hospital WHERE HOLIDAYCLOSE IS NOT NULL GROUP BY HOLIDAYCLOSE order by 1
    </select>

    <select id="test" parameterType="java.util.HashMap" resultType="com.example.Spring_Project.dto.HospitalDTO">
        select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from(
        select ROWNUM rn,a.*
        from
        (select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        NVL2(holidayOpen,holidayOpen,'-') AS holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from hospital
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="city neq '' and city neq 'ALL'.toString()">
                AND city=#{city}
            </if>
            <if test="weekOpen != null">
                <![CDATA[AND to_date(weekOpen,'hh24:mi')>=to_date(#{weekOpen},'hh24:mi')]]>
            </if>
            <if test="weekClose != null">
                <![CDATA[AND to_date(weekClose,'hh24:mi')<=to_date(#{weekClose},'hh24:mi')]]>
            </if>
            <if test="satOpen != null">
                <![CDATA[AND to_date(satOpen,'hh24:mi')>=to_date(#{satOpen},'hh24:mi')]]>
            </if>
            <if test="satClose != null">
                <![CDATA[AND to_date(satClose,'hh24:mi')<=to_date(#{satClose},'hh24:mi')]]>
            </if>
            <if test="searchType eq 'hospital_name'.toString()">
                and hospital_name like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'phone'.toString()">
                and phone like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'postcode'.toString()">
                and postcode like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'roadAddress'.toString()">
                and roadAddress like '%'||#{keyword}||'%'
            </if>
            <choose>
                <when test="holidayY eq '진료'.toString() and holidayN eq ''.toString()">
                    <![CDATA[AND to_date(holidayOpen,'hh24:mi')>=to_date(#{holidayOpen},'hh24:mi')]]>
                    <![CDATA[AND to_date(holidayClose,'hh24:mi')<=to_date(#{holidayClose},'hh24:mi')]]>
                </when>
                <!-- 미진료만 선택 -->
                <when test="holidayN eq '미진료'.toString() and holidayY eq ''.toString()">
                    AND holidayOpen = '-'
                    AND holidayClose = '-'
                </when>
            </choose>
        </trim>
        order by 1) a
        )
        where rn between ${start} and #{end}
    </select>

    <select id="test2" parameterType="java.util.HashMap" resultType="com.example.Spring_Project.dto.HospitalDTO">
        select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from(
        select ROWNUM rn,a.*
        from
        (select
        hospital_seq,
        postcode,
        city,
        hospital_name,
        roadAddress,
        jibunAddress,
        weekOpen,
        weekClose,
        satOpen,
        satClose,
        NVL2(holidayOpen,holidayOpen,'-') AS holidayOpen,
        holidayClose,
        phone,
        latitude,
        longitude,
        flag
        from hospital
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="city neq '' and city neq 'ALL'.toString()">
                AND city=#{city}
            </if>
            <if test="weekOpen != null">
                <![CDATA[AND to_date(weekOpen,'hh24:mi')>=to_date(#{weekOpen},'hh24:mi')]]>
            </if>
            <if test="weekClose != null">
                <![CDATA[AND to_date(weekClose,'hh24:mi')<=to_date(#{weekClose},'hh24:mi')]]>
            </if>
            <if test="satOpen != null">
                <![CDATA[AND to_date(satOpen,'hh24:mi')>=to_date(#{satOpen},'hh24:mi')]]>
            </if>
            <if test="satClose != null">
                <![CDATA[AND to_date(satClose,'hh24:mi')<=to_date(#{satClose},'hh24:mi')]]>
            </if>

            <if test="searchType eq 'hospital_name'.toString()">
                and hospital_name like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'phone'.toString()">
                and phone like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'postcode'.toString()">
                and postcode like '%'||#{keyword}||'%'
            </if>
            <if test="searchType eq 'roadAddress'.toString()">
                and roadAddress like '%'||#{keyword}||'%'
            </if>
            <choose>
                <!-- 진료만 선택 -->
                <when test="holidayY eq '진료'.toString() and holidayN eq ''.toString()">
                    <![CDATA[AND to_date(holidayOpen,'hh24:mi')>=to_date(#{holidayOpen},'hh24:mi')]]>
                    <![CDATA[AND to_date(holidayClose,'hh24:mi')<=to_date(#{holidayClose},'hh24:mi')]]>
                </when>
                <!-- 미진료만 선택 -->
                <when test="holidayN eq '미진료'.toString() and holidayY eq ''.toString()">
                    AND holidayOpen = '-'
                    AND holidayClose = '-'
                </when>
            </choose>
        </trim>
        order by 1) a
        )
        where rn between ${start} and #{end}
    </select>


    <select id="getCode_Info" resultType="com.example.Spring_Project.dto.CodeInfoDTO">
        select
            code,
            code_type,
            reg_date
        from code_info
    </select>

<!--    <insert id="insertNews" parameterType="java.util.List">-->
<!--                 insert all-->
<!--        <foreach collection="list" item="item" separator=",">-->
<!--            into covid-->
<!--            values(-->
<!--            #{item.link},-->
<!--            #{item.title}-->
<!--            )-->
<!--        </foreach>-->
<!--        select * from dual-->
<!--    </insert>-->


    <insert id="insertNews" parameterType="java.util.List">
        INSERT
        INTO news
        SELECT news_seq.NEXTVAL, A.*
        FROM
        (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT #{item.link},#{item.title},#{item.keyword},'N',#{item.description}
            FROM DUAL
        </foreach>
        ) A
    </insert>


<!--    <update id="insertNews" parameterType="java.util.List">-->
<!--        <foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">-->
<!--            INTO news values(news_seq.nextval,#{item.link},#{item.title},#{item.keyword},'N',#{item.description})-->
<!--        </foreach>-->
<!--    </update>-->

    <select id="getCovidNews" resultType="com.example.Spring_Project.dto.NewsDTO">
<!--        select link,title from news where keyword='코로나'-->
        select link,title from news where keyword=#{keyword}
    </select>

    <select id="isLinkEmpty" resultType="Integer">
<!--        select count(*)-->
<!--        from news-->
<!--        where link=#{link} and keyword='코로나'-->
        select count(*)
        from news
        where link=#{link} and keyword=#{keyword}
    </select>

    <update id="updateLink" parameterType="java.util.HashMap">
        update news set link=#{updLink},title=#{updTitle},description=#{updDescription}
        where link=#{link} and title=#{title} and keyword=#{keyword} and title=#{description}
    </update>

    <update id="updateNewsStatus" parameterType="String">
        update news set status = 'Y' where link = #{link} and keyword=#{keyword}
    </update>

    <select id="getStatusN" resultType="com.example.Spring_Project.dto.NewsDTO">
        select link,title from news where status='N' and keyword=#{keyword}
    </select>


    <select id="getNewsByKeyword" resultType="com.example.Spring_Project.dto.NewsDTO">
        select
            link,
            title,
            keyword,
            status,
            description
        from news
        where keyword=#{keyword}
    </select>

    <update id="updateStatusToN">
        update news set status='N'
        where keyword=#{keyword}
    </update>

    <select id="getNewsList" resultType="com.example.Spring_Project.dto.NewsDTO">
        select
            link,
            title,
            keyword,
            status,
            description
        from news
    </select>
</mapper>
