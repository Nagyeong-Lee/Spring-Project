<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Spring_Project.mapper.ProductMapper">

    <select id="getProducts" resultType="com.example.Spring_Project.dto.ProductDTO">
        select
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        from product
    </select>

    <select id="getProductDetail" resultType="com.example.Spring_Project.dto.ProductDTO">
        select
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        from product
        where pd_seq=#{pd_seq}
    </select>


    <select id="getWProduct" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category IN (
        SELECT category_seq FROM category WHERE PARENT_CATEGORY_SEQ =1)
    </select>

    <select id="getWOuter" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 2
    </select>

    <select id="getWTop" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 3
    </select>

    <select id="getWPants" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 4
    </select>

    <select id="getWAccessories" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 5
    </select>


    <select id="getMProduct" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category IN (
        SELECT category_seq FROM category WHERE PARENT_CATEGORY_SEQ =6)
    </select>


    <select id="getMOuter" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 7
    </select>

    <select id="getMTop" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 8
    </select>
    <select id="getMPants" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 9
    </select>
    <select id="getMAccessories" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 10
    </select>


    <select id="getNewProduct" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category IN (
        SELECT category_seq FROM category WHERE PARENT_CATEGORY_SEQ =11)
    </select>

    <select id="getNewOuter" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 12
    </select>

    <select id="getNewTop" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 13
    </select>

    <select id="getNewPants" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 14
    </select>

    <select id="getNewAccessories" resultType="com.example.Spring_Project.dto.ProductDTO">
        SELECT
        pd_seq,
        name,
        description,
        price,
        stock,
        status,
        img,
        category
        FROM PRODUCT p WHERE category = 15
    </select>


    <select id="getOptions" resultType="com.example.Spring_Project.dto.OptionDTO">
        select
        option_seq,
        category,
        name,
        stock,
        status,
        pd_seq
        from options
        where pd_seq=#{pd_seq}
    </select>


    <select id="getCategory" resultType="String">
        SELECT category
        FROM (
        SELECT category,count(*)
        FROM OPTIONS
        WHERE pd_seq=#{pd_seq}
        GROUP BY category)
    </select>

    <select id="optionByCategory" resultType="String">
        SELECT category
        FROM (
        SELECT category,count(*)
        FROM OPTIONS
        WHERE pd_seq=#{pd_seq}
        GROUP BY category)
    </select>


    <select id="getOptionByGroup" resultType="com.example.Spring_Project.dto.OptionListDTO">
        SELECT
            name,
            status,
            stock
        FROM OPTIONS
        WHERE category= #{category} and pd_seq=#{pd_seq}
    </select>

    <insert id="insertCart" >
        insert into cart
        values(
            cart_seq.nextval,
            #{id},
            #{count},
            #{pd_seq},
            #{optionList}
            ,'Y'
        )
    </insert>

    <update id="minusOption">
        update option set stock=stock-1 where pd_seq=#{pd_seq} and name=#{optionName}
    </update>

    <update id="minusPd">
        update product set stock=stock-1 where pd_seq=#{pd_seq}
    </update>

    <select id="getOptionStock" resultType="Integer">
        select
          option_seq
        from options
        where pd_seq=#{pd_seq} and name=#{optionName}
    </select>

    <update id="updateOptionStatus">
        update options set status='N' where option_seq=#{option_seq}
    </update>

    <select id="getPdStock" resultType="Integer">
        select
          pd_seq
        from options
        where pd_seq=#{pd_seq}
    </select>

    <update id="updatePdStatus">
        update product set status='N' where pd_seq=#{pd_seq}
    </update>

    <select id="getCartInfo" resultType="com.example.Spring_Project.dto.CartDTO">
<!--        select-->
<!--            cart_seq,-->
<!--            id,-->
<!--            count,-->
<!--            pd_seq,-->
<!--            options,-->
<!--            status-->
<!--        from cart-->
<!--        where id=#{id}-->
<!--        and status = 'Y'-->
        select
            c.cart_seq,
            c.id,c.count,
            c.OPTIONS,
            c.status,
            c.PD_SEQ,
            p.NAME,
            p.DESCRIPTION,
            p.PRICE,
            p.STOCK,
            p.IMG,
            p.CATEGORY
            from cart c JOIN product p ON c.pd_seq = p.PD_SEQ
            where c.id=#{id} and c.status = 'Y'
    </select>

    <select id="getOptionCategory" resultType="String">
        SELECT DISTINCT category FROM OPTIONS WHERE pd_seq in(
        SELECT pd_seq FROM cart WHERE cart_seq=#{cart_seq})
    </select>

    <update id="deleteItem">
        update cart set status = 'N'
        where cart_seq=#{cart_seq}
    </update>

    <select id="getCartOption" resultType="java.util.Map">
        select
            pd_seq,
            options
        from cart
        where cart_seq=#{cart_seq}
    </select>

    <select id="getOptionCount" resultType="Integer">
        SELECT stock FROM OPTIONS WHERE name=#{option} AND PD_SEQ=#{pd_seq}
    </select>

    <select id="getPdPrice" resultType="Integer">
        select
            price
        from product
        where pd_seq=#{pd_seq}
    </select>

    <select id="getMemberSeq" resultType="Integer">
        select m_seq from member where id=#{id}
    </select>

    <select id="getCoupon" resultType="com.example.Spring_Project.dto.CouponDTO">
        select
          cp_seq,
          title,
          discount
        from  coupon
        where m_seq=#{m_seq}
        and status = 'Y'
    </select>

    <update id="updateCount">
        update cart
        set count=#{count}
        where cart_seq=#{cart_seq}
    </update>

    <select id="getChangedPrice" resultType="Integer">
        SELECT #{price}-(#{price}*#{discount})/100 FROM dual
    </select>

    <select id="getDefaultAddress" resultType="String">
        select
            defaultAddress
        from deliInfo
        where id=#{id}
    </select>

    <select id="getAdditionalAddress1" resultType="String">
        select
            additionalAddress1
        from deliInfo
        where id=#{id}
    </select>

    <select id="getAdditionalAddress2" resultType="String">
        select
            additionalAddress2
        from deliInfo
        where id=#{id}
    </select>

    <select id="getName" resultType="String">
        SELECT m.name FROM MEMBER m JOIN DELIINFO d ON m.ID = d.ID WHERE m.id=#{id}
    </select>

    <select id="getPhone" resultType="String">
        SELECT m.phone FROM MEMBER m JOIN DELIINFO d ON m.ID = d.ID WHERE m.id=#{id}
    </select>

    <select id="checkCouponPr" resultType="com.example.Spring_Project.dto.CouponDTO">
        SELECT
            cp_seq,
            title,
            discount,
            m_seq,
            coupon_period,
            status
        FROM coupon WHERE cp_seq in(
        select cp_seq from coupon WHERE trunc(sysdate)-TO_DATE(coupon_period,'YYYYMMDD')>0 and status = 'Y')

    </select>

    <update id="updCoupon">
        update coupon set status = 'N' where cp_seq=#{cp_seq}
    </update>
</mapper>
