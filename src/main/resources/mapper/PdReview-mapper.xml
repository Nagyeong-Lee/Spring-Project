<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Spring_Project.mapper.PdReviewMapper">
    <insert id="reviewInsert"  parameterType="java.util.HashMap">
        insert into review values(
            review_seq.nextval,
            #{loginID},
            #{payPd_seq},
            #{pd_seq},
            sysdate,
            'Y',
            #{star},
            #{content}
        )
    </insert>

<!--    <insert id="insertReviewImg" parameterType="java.util.List">-->
<!--        insert all-->
<!--        <foreach collection="list" item="item" separator="," >-->
<!--            into img values(-->
<!--            img_seq.nextval,-->
<!--            #{item.review_seq},-->
<!--            #{item.oriname},-->
<!--            #{item.sysname},-->
<!--            #{item.imgSavePath},-->
<!--            'Y'-->
<!--        )-->
<!--        </foreach>-->
<!--        select * from dual-->
<!--    </insert>-->
<!--    <insert id="insertReviewImg" parameterType="java.util.List">-->
<!--        insert all-->
<!--        <foreach collection="list" item="i" separator=",">-->
<!--            into-->
<!--            img-->
<!--            values-->
<!--            (img_seq.nextval,-->
<!--            #{i.review_seq},-->
<!--            #{i.oriname},-->
<!--            #{i.sysname},-->
<!--            #{i.imgSavePath},-->
<!--            'Y'-->
<!--            )-->
<!--        </foreach>-->
<!--        SELECT * FROM DUAL-->
<!--    </insert>-->

    <insert id="insertReviewImg" parameterType="java.util.List">
        INSERT
        INTO img
        SELECT img_seq.NEXTVAL, A.*
        FROM
        (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT #{item.review_seq},#{item.oriname},#{item.sysname},#{item.imgSavePath},'Y'
            FROM DUAL
        </foreach>
        ) A
    </insert>


    <select id="reviewInfo" resultType="com.example.Spring_Project.dto.ReviewDTO">
        SELECT
          review_seq,
          payPd_seq,
          id,
          pd_seq,
          status,
          star,
          content
        from review
        where payPd_seq = #{payPd_seq} and status = 'Y'
    </select>

    <select id="reviewDetail" resultType="com.example.Spring_Project.dto.ReviewDTO">
        SELECT
            review_seq,
            payPd_seq,
            id,
            pd_seq,
            status,
            star,
            content
        from review
        where review_seq = #{review_seq} and status = 'Y'
    </select>

    <select id="getReviewImg" resultType="com.example.Spring_Project.dto.ImgDTO">
        select
         img_seq,
         review_seq,
         oriname,
         sysname
        from img
        where review_seq = #{review_seq} and status = 'Y'
    </select>

    <update id="updReviewDetail">
        update
         review
        set writeDate = sysdate,
        star = #{star},
        content = #{content}
        where review_seq = #{review_seq}
    </update>

    <update id="deleteImg" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
                update
                    img
                    set status = 'N'
                where  img_seq = #{item}
        </foreach>
    </update>

    <select id="getReviewByPd_seq" resultType="com.example.Spring_Project.dto.ReviewDTO">
        select
            review_seq,
            id,
            payPd_seq,
            writeDate,
            star,
            content
        from review
        where status = 'Y' and pd_seq = #{pd_seq}
        order by writeDate desc
    </select>

    <select id="reviewInPdDetail" resultType="map">
        SELECT
            id,
            name,
            price,
            img,
            pdOption,
            a.stock AS stock,
            to_char(writeDate,'YYYY-MM-DD HH:MI') AS writeDate,
            star,
            content
            FROM PRODUCT p JOIN
                (SELECT
                    r.id,
                    r.pd_seq,
                    writeDate,
                    star,
                    content,
                    pdOption,
                    stock,
                    r.status
                FROM review r JOIN sales s
                ON r.payPd_seq = s.payPd_seq
                WHERE r.payPd_seq = #{payPd_seq} and status = 'Y') a
                on a.pd_seq = p.pd_seq WHERE a.pd_seq = #{pd_seq}


<!--        SELECT-->
<!--        id,-->
<!--        name,-->
<!--        price,-->
<!--        img,-->
<!--        pdOption,-->
<!--        a.stock,-->
<!--        to_char(writeDate,'YYYY-MM-DD HH:MI') AS writeDate,-->
<!--        star,-->
<!--        content-->
<!--        FROM PRODUCT p JOIN-->
<!--        (SELECT-->
<!--        r.id,-->
<!--        r.pd_seq,-->
<!--        writeDate,-->
<!--        star,-->
<!--        content,-->
<!--        pdOption,-->
<!--        stock-->
<!--        FROM review r JOIN sales s-->
<!--        ON r.payPd_seq = s.payPd_seq ) a-->
<!--        on a.pd_seq = p.pd_seq WHERE a.pd_seq = #{pd_seq}-->
    </select>

    <select id="reviewImgsByPd_seq" resultType="String">
        SELECT
            sysname
        FROM img
        WHERE review_seq IN
        (
            SELECT
                review_seq
            FROM review
            WHERE pd_seq = #{pd_seq})
    </select>

    <select id="optionCategory" resultType="String">
        SELECT
        category
        FROM OPTIONS
        WHERE pd_seq = #{pd_seq} AND name = #{optName}
    </select>

    <select id="getReviews" resultType="com.example.Spring_Project.dto.ParsedReviewDTO" parameterType="java.util.List">


<!--        SELECT  a.*-->
<!--        FROM (-->
<!--        SELECT ROWNUM r, review.* FROM-->
<!--        (SELECT-->
<!--        r.review_seq,-->
<!--        revImg.revImg_seq,r.id,-->
<!--        r.payPd_seq,-->
<!--        writeDate,-->
<!--        r.star,-->
<!--        r.content,-->
<!--        r.stock,-->
<!--        r.price,-->
<!--        r.pdOption,-->
<!--        r.pd_seq,-->
<!--        r.name,-->
<!--        r.pdName-->
<!--        FROM revImg JOIN-->
<!--        (SELECT-->
<!--        f.review_seq,-->
<!--        f.id,-->
<!--        f.payPd_seq,-->
<!--        to_char(f.revWriteDate,'YYYY-MM-DD HH24:MI') AS writeDate,-->
<!--        f.star,-->
<!--        f.content,-->
<!--        f.stock,-->
<!--        f.price,-->
<!--        f.pdOption,-->
<!--        p.pd_seq,-->
<!--        p.name,-->
<!--        p.img AS pdName FROM product p JOIN (-->
<!--        (SELECT-->
<!--        a.review_seq,-->
<!--        a.id,-->
<!--        a.payPd_seq,-->
<!--        a.pd_seq,-->
<!--        a.writeDate AS revWriteDate,-->
<!--        a.star,-->
<!--        a.content,-->
<!--        s.stock,-->
<!--        s.price,-->
<!--        s.pdOption-->
<!--        FROM-->
<!--        (SELECT-->
<!--        review_seq,-->
<!--        id,-->
<!--        payPd_seq,-->
<!--        pd_seq,-->
<!--        writeDate,-->
<!--        star,-->
<!--        content-->
<!--        FROM REVIEW r WHERE PD_SEQ IN-->
<!--        <foreach collection="list" item="item" separator="," open="(" close=")">-->
<!--                    #{item}-->
<!--                </foreach>-->
<!--        AND star = 5 AND status = 'Y' ORDER BY WRITEDATE ) a-->
<!--        JOIN sales s ON a.payPd_seq = s.PAYPD_SEQ) f )-->
<!--        ON p.PD_SEQ  = f.pd_seq ORDER BY WRITEDATE)r-->
<!--        ON revImg.review_seq = r.review_seq) review) a WHERE r BETWEEN #{start} AND #{end}-->


        SELECT r.review_seq,
        r.id,
        r.pd_seq,
        r.payPd_seq,
        r.stock,
        r.price,
        r.pdOption,
        r.star,
        r.content,
        r.writeDate,
        r.pdName,
        r.PdImg
        FROM (
        SELECT ROWNUM rn, a.*
        FROM (
        SELECT
        r.review_seq,
        r.id,
        r.pd_seq,
        r.payPd_seq,
        r.stock,
        r.price,
        r.pdOption,
        r.star,
        r.content,
        writeDate,
        p.name AS pdName,
        p.img AS PdImg
        FROM PRODUCT p JOIN (
        SELECT
        r.review_seq,
        r.id,
        r.pd_seq,
        r.payPd_seq,
        s.stock,
        s.price,
        s.pdOption,
        r.star,
        r.content,
        writeDate
        FROM sales s JOIN (
        SELECT
        r.review_seq,
        r.id,
        r.payPd_seq,
        r.pd_seq,
        to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate,
        r.star,
        r.content
        FROM review r WHERE pd_seq IN (
        SELECT
        pd_seq
        FROM product
        WHERE CATEGORY IN (
        SELECT
        category_seq
        FROM category
        WHERE PARENT_CATEGORY_SEQ IN (
        SELECT
        CATEGORY_SEQ
        FROM category
        WHERE name IN
        (
        '여성'
        ,
        '남성'
        ,
        '신상품'
        ) )
        AND name IN
        (
        '악세사리'
        ,
        '아우터'
        ,
        '상의'
        ,
        '하의'
        )
        )) AND status = 'Y') r ON s.payPd_seq = r.payPd_seq
        WHERE r.star IN
        (
        '1'
        ,
        '2'
        ,
        '3'
        ,
        '4'
        ,
        '5'
        )
        ) r on p.pd_seq = r.pd_seq
        ORDER BY writeDate
        desc
        ) a) r
        WHERE rn BETWEEN #{start} AND #{end}
    </select>




    <select id="pdInfo" resultType="com.example.Spring_Project.dto.ProductDTO">
        select
            pd_seq,
            name,
            description,
            price,
            stock,
            status,
            img,
            category
        from product
        where pd_seq = #{pd_seq}
    </select>

    <select id="getReviewsByOption" parameterType="map" resultType="map">
        select
            *
        from
        (select
            review_seq,
            id,
            payPd_seq,
            pd_seq,
            to_char(writeDate,'YYYY-MM-DD HH24:MI') AS writeDate,
            star,
            content
        from review where star in
        <foreach collection="data" item="item" open="(" close=")">
            #{item.starArr}
        </foreach>
        and
        <foreach collection="data" item="item" open="(" close=")">
            #{item.parentCategoryArr}
        </foreach>
        and
        <foreach collection="data" item="item" open="(" close=")">
            #{item.childCategoryArr}
        </foreach>
        and status = 'Y'
        <choose>
            <when test='time.equals("writeTimeAsc")'>
                order by writeDate
            </when>
            <otherwise>
                order by writeDate desc
            </otherwise>
        </choose>) r join product p
        on r.pd_seq = p.pd_seq
    </select>



    <select id="getReviewImgs" resultType="map">
        SELECT img_seq,review_seq,sysname FROM img WHERE review_seq = #{seq} AND status = 'Y'
    </select>

    <select id="getImgSeqs" resultType="Integer">
        select
         img_seq
        from img
        where review_seq = #{review_seq}
    </select>

    <insert id="insertRevSeq" >
        insert into
        revImg values(
        #{review_seq},
        #{imgSeqMap}
        )
    </insert>

    <select id="getRevImgSysname" resultType="String">
        select
            sysname
        from img
        where img_seq = #{imgSeq}
    </select>

    <select id="getRevImg" resultType="String">
        SELECT
            revImg_seq
        FROM revImg
        WHERE review_seq = #{review_seq}
    </select>
</mapper>