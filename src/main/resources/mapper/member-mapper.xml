<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.Spring_Project.mapper.MemberMapper">

    <insert id="signUp" parameterType="com.example.Spring_Project.dto.MemberDTO">
        insert into
        member
        values (
        m_seq.nextval,
        #{id},
        #{pw},
        #{name},
        #{email},
        #{phone},
        #{postcode},
        #{roadAddress},
        #{jibunAddress},
        #{detailAddress, jdbcType=VARCHAR},
        sysdate,
        #{oriname, jdbcType=VARCHAR},
        #{sysname, jdbcType=VARCHAR},
        #{savePath, jdbcType=VARCHAR},
        'Y',
        'ROLE_MEMBER',
        #{fileIsEmpty, jdbcType=VARCHAR})
    </insert>

    <select id="idDupleCheck" resultType="Integer">
        select count(*)
        from member
        where id=#{id} and status='Y'
    </select>

    <select id="emailDupleCheck" resultType="Integer">
        select count(*)
        from member
        where email=#{email} and status='Y'
    </select>

    <select id="login" resultType="Integer">
        select count(*)
        from member
        where id=#{id} and pw=#{pw}
        and status='Y'
    </select>

    <delete id="delete">
        update member
        set status='N'
        where id=#{id}
    </delete>

    <select id="memberInfo" resultType="com.example.Spring_Project.dto.MemberDTO">
        select
        m_seq,
        id,
        pw,
        name,
        email,
        phone,
        postcode,
        roadAddress,
        jibunAddress,
        detailAddress,
        signup_date,
        oriname,
        sysname,
        savePath,
        status,
        type
        from member
        where id=#{id} and status='Y'
    </select>

    <select id="searchId" resultType="String">
        select id
        from member
        where email=#{email} and status='Y'
    </select>

    <select id="searchPw" resultType="String">
        select pw
        from member
        where id=#{id} and status='Y'
    </select>

    <select id="selectById" resultType="com.example.Spring_Project.dto.MemberDTO">
        select
        m_seq,
        id,
        pw,
        name,
        email,
        phone,
        postcode,
        roadAddress,
        jibunAddress,
        detailAddress,
        signup_date,
        oriname,
        sysname,
        savePath,
        status,
        type
        from member
        where id=#{id} and status='Y'
    </select>

    <select id="selectByEmail" resultType="com.example.Spring_Project.dto.MemberDTO">
        select
        m_seq,
        id,
        pw,
        name,
        email,
        phone,
        postcode,
        roadAddress,
        jibunAddress,
        detailAddress,
        signup_date,
        oriname,
        sysname,
        savePath,
        status,
        type
        from member
        where email=#{email}
    </select>

    <select id="isEmailExist" resultType="Integer">
        select count(*)
        from member
        where email=#{email}
    </select>

    <update id="tempPw">
        update member
        set pw=#{pw}
        where email=#{email}
        and status='Y'
    </update>

    <update id="update" parameterType="com.example.Spring_Project.dto.MemberDTO">
        update member
        set name=#{name},
        phone=#{phone},
        postcode=#{postcode},
        roadAddress=#{roadAddress},
        jibunAddress=#{jibunAddress},
        detailAddress=#{detailAddress, jdbcType=VARCHAR}
        <if test="fileIsEmpty eq 'Y'.toString()">
            ,oriname=#{oriname, jdbcType=VARCHAR},
            sysname=#{sysname, jdbcType=VARCHAR},
            savePath=#{savePath, jdbcType=VARCHAR}
        </if>
        where id=#{id}
        and status='Y'
    </update>

    <select id="getUserType" resultType="String">
        select type
        from member
        where id=#{id}
    </select>

    <update id="modifyLastLoginDate">
        update member
        set lastLoginDate=sysdate
        where id=#{id}
    </update>

    <select id="diffDate" resultType="Integer">
        select count(*)
        from member
        where id=#{id}
        and trunc(sysdate)-lastLoginDate >= 60
    </select>

    <update id="changeStatus">
        update member
        set status = 'N',
            lastLoginDate = null
        where id=#{id}
    </update>

    <select id="getNonActiveMember" resultType="com.example.Spring_Project.dto.MemberDTO">
        select
        m_seq,
        id,
        pw,
        name,
        email,
        phone,
        postcode,
        roadAddress,
        jibunAddress,
        detailAddress,
        signup_date,
        oriname,
        sysname,
        savePath,
        status,
        type
        from member
        where id=#{id} and status='N'
    </select>
    
    <select id="isMemberExist" resultType="Integer">
        select count(*)
        from member
        where id=#{id}
        and email=#{email}
    </select>

    <update id="activeMember">
        update member
        set status = 'Y'
        where id=#{id}
        and email=#{email}
    </update>


</mapper>